#!/bin/bash

# Ensure a private umask since we do a lot of SSL handling.
umask 077

function log() {
    echo "$@"
}

function echoerr() {
    echo "$@" 1>&2
}

function genpassword() {
    echo $(pwgen 48 1)
}

function stdbool() {
    if [ -z "$1" ] ; then
        echo "n"
    else
        echo ${1:0:1} | tr [A-Z] [a-z]
    fi
}


log "Creating sssd config database..."
mkdir -p /run/sssd/{etc,lib}
chown -R sssd: /run/sssd
chmod 0755 /run/sssd

chown root: /run/sssd/etc
chmod 0700 /run/sssd/etc

chmod 600 /etc/ssh/sshd_config

log "Templating sssd configuration..."
p2 -t /etc/sssd/sssd.conf.p2 -o /run/sssd/etc/sssd.conf || ( echoerr "Templating sssd config failed." ; exit 1 )
chmod 0600 /run/etc/sssd.conf

log "Copying template sssd config db..."
rsync -a /var/lib/sss.template/ /var/lib/sss/ || ( echoerr "Templaing sssd config directory failed." ; exit 1 )

log "Templating access.conf configuration..."
p2 -t /etc/security/access.conf.p2 -o /run/access.conf || ( echoerr "Templating access config failed." ; exit 1 )
chmod 0644 /run/access.conf

log "Templating Kerberos configuration..."
p2 -t /etc/krb5.conf.p2 -o /run/krb5.conf
chmod 0644 /run/krb5.conf

log "Templating nginx configuration..."
p2 -t /etc/nginx/nginx.conf.p2 -o /run/nginx.conf || ( echoerr "Templating nginx config failed." ; exit 1 )
chmod 644 /run/nginx.conf
log "Templating syslog-ng configuration..."
export SERVICES="$(ls -1 /etc/services | tr '\n' ' ')nginx-access nginx-error"
p2 -t /etc/syslog-ng.conf.p2 -o /run/syslog-ng.conf || ( echoerr "Templating syslog-ng config failed." ; exit 1 )
chmod 644 /run/syslog-ng.conf

log "Create logging fifo directory"
mkdir -p /run/log

log "Create nginx cache directory"
mkdir -p /tmp/nginx
chown root:www-data /tmp/nginx
chmod 770 /tmp/nginx

ln -sf /usr/share/zoneinfo/Australia/Sydney /etc/localtime

# This structure ensures we can CTRL+C on the desktop.
cp -af /etc/services /run/services

exec "$@"

